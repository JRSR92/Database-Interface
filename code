#libraries used 
import tkinter as tk
from tkinter import filedialog
import pymongo
from pymongo import MongoClient
from bson.json_util import dumps, loads
import csv
import subprocess
import time


#root window information 
root = tk.Tk()
root.title("TRACS5 Database Interface")
root.geometry('500x600+50+50')
root.resizable(False,False)

#starts a connection to the database
try:
    subprocess.Popen(['C:\\Program Files\\MongoDB\\Server\\4.4\\bin\\mongod.exe'])
    print("Connection Established")
except:
    print("Connection Failed")

client = MongoClient()
db = client.TRACS_Data_TEST
collection = db.Network_Surveys_Year5


#all commands for buttons 
def db_connect():
    print("Hello World")
        
def make_json():#this function opens a list in a csv file and creates a json file based on the contents       
    tk.Tk().withdraw() # prevents an empty tkinter window from appearing
    output_location = filedialog.asksaveasfilename(defaultextension =".json",filetypes=[("json",".json")])
    print(output_location)
    try:
        list_cur =[]
        temp_list=[]
        print(sections)
        for item in sections:
            sec = item[0]
            print(sec)
            for post in collection.find({"Sections":sec},{"Survey Name ":1}):
                if list(post.values())[1] in temp_list:
                    pass
                else:
                    temp_list.append(list(post.values())[1])
                print(temp_list)        

        for db_object in temp_list:
            y = collection.find({"Survey Name ":db_object})
            list_cur.append(y)
    
            print(list_cur)
        json_data = dumps(list_cur, indent = 1)
        with open(output_location,"w")as file:
            file.write(json_data)
    except:
        print("failed to create JSON")

def user_input():
    global sections
    sections = list([[user_entry.get()]])
    print(sections)
    file_check = collection.find_one({"Sections":sections[0][0]})
    #print(file_check)
    if file_check == None:
        print("you lose charlie")
        user_entry.delete(0, 'end')
        user_entry.insert(-1, "Section Not in Database")
        
        
def load_csv():
    tk.Tk().withdraw() # prevents an empty tkinter window from appearing
    file_path = filedialog.askopenfilename(title="Select .csv File", filetypes=[("csv",".csv")])
    with open(file_path) as f:
        global sections
        sections = list(csv.reader(f))
    print(sections)
    
    
    
#all button and feature information 
load_csv_but = tk.Button(root, text="Select File", command=load_csv)
load_csv_but.pack()

make_json_but = tk.Button(root, text = "Create Json", command=make_json)
make_json_but.pack()

user_search_butt = tk.Button(root, text="Search Database", command=user_input)
user_search_butt.pack()

user_entry = tk.Entry(root, width=40,text = "enter one section")
user_entry.insert(-1, "Enter One Section")
user_entry.pack()




root.mainloop()
